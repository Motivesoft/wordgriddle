meta {
  name: download-text
  type: http
  seq: 6
}

get {
  url: http://{{HOST}}/api/bonus/download
  body: multipartForm
  auth: none
}

headers {
  Accept: text/plain
}

assert {
  res.status: eq 200
  res.headers['content-type']: contains text/plain
  res.headers['content-disposition']: contains bonusWords.txt
}

script:pre-request {
  // Run as a setup step to guarantee dictionary content
  //const response = await bru.runRequest('wordlists/bonus/test-setup');
}

tests {
  test("Should return a string", function() {
    const data = res.getBody();
    expect(data).to.be.a('string');
  
    const snippet = data.slice(0, Math.min(data.length,1000));
    const regex = /^[a-z\s]+$/;
    assert(regex.test(snippet),"String contains non-alphabetic characters");
  });
  
  test("Should return the expected result", function() {
    const data = res.getBody();
    expect(data).to.equal('gift\nbonus\nprize\nreward\ntrophy');
  });
}
