meta {
  name: download-json
  type: http
  seq: 4
}

get {
  url: http://{{HOST}}/api/bonus/download
  body: multipartForm
  auth: none
}

headers {
  Accept: application/json
}

assert {
  res.status: eq 200
  res.headers['content-type']: contains application/json
  res.headers['content-disposition']: contains bonusWords.json
}

script:pre-request {
  // Run as a setup step to guarantee dictionary content
  const response = await bru.runRequest('wordlists/bonus/upload-txt');
}

tests {
  test("Should return a JSON object", function() {
    const data = res.getBody();
    expect(data).to.have.property('count');
    expect(data).to.have.property('words');
    expect(Array.isArray(data.words)).to.be.true;
  });
  
  test("Should return expected results", function() {
    const data = res.getBody();
    expect(data.count).to.equal(5);
    expect(data.words.includes("prize")).to.be.true;
  });
  
  
}
